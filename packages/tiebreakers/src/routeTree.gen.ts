/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TournamentIdIndexRouteImport } from './routes/tournament/$id/index'
import { Route as TournamentIdScoresRouteImport } from './routes/tournament/$id/scores'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TournamentIdIndexRoute = TournamentIdIndexRouteImport.update({
  id: '/tournament/$id/',
  path: '/tournament/$id/',
  getParentRoute: () => rootRouteImport,
} as any)
const TournamentIdScoresRoute = TournamentIdScoresRouteImport.update({
  id: '/tournament/$id/scores',
  path: '/tournament/$id/scores',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/tournament/$id/scores': typeof TournamentIdScoresRoute
  '/tournament/$id': typeof TournamentIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/tournament/$id/scores': typeof TournamentIdScoresRoute
  '/tournament/$id': typeof TournamentIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/tournament/$id/scores': typeof TournamentIdScoresRoute
  '/tournament/$id/': typeof TournamentIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/tournament/$id/scores' | '/tournament/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/tournament/$id/scores' | '/tournament/$id'
  id: '__root__' | '/' | '/tournament/$id/scores' | '/tournament/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  TournamentIdScoresRoute: typeof TournamentIdScoresRoute
  TournamentIdIndexRoute: typeof TournamentIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tournament/$id/': {
      id: '/tournament/$id/'
      path: '/tournament/$id'
      fullPath: '/tournament/$id'
      preLoaderRoute: typeof TournamentIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tournament/$id/scores': {
      id: '/tournament/$id/scores'
      path: '/tournament/$id/scores'
      fullPath: '/tournament/$id/scores'
      preLoaderRoute: typeof TournamentIdScoresRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  TournamentIdScoresRoute: TournamentIdScoresRoute,
  TournamentIdIndexRoute: TournamentIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
